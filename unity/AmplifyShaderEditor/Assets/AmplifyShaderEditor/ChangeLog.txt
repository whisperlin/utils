Release Notes:
v1.3.0 dev 01:
* Fixes:
    * Fixed issue on copy-pasting custom lighting nodes
    * Fixed issue on null pointer reference on preview material when hitting play mode 

* Improvements:
    * Added upper left widgets into several nodes to change important properties directly on node body
    * Added secondary title into several nodes to show its current state directly from node body

v1.3.0 dev 03:
* Improvements:
    * Completely refactored and changed the graph and node rendering to use a semi-MVC model
        * Improves the overall performance in several orders of magnitude
    * Various small visual fixes and improvements
    * Various changes to prevent most memory allocations heavily reducing GC
    * Changed zoom and auto-pan to a smooth version and fixed its auto-boundaries
        * This should make the editor feel more snappy and responsive
    * New object pickers for 'Substance Sampler' and 'Triplanar Sampler'
    * New outline for selected Wire nodes
        * Now is easier to see in all situations
    * Various previews were added,improved or fixed
        * 'Texture Sampler' nodes now properly display default values
    * Tweaked Input Type labels on 'Custom Expression' nodes to match shader variable type names
    * Custom Lighting nodes now show internal data and have additional Normal options

* Fixes:
    * Fixed 'Texture Array' node issue when referencing an un-connected node
    * Fixed UI issue on 'Custom Expression' qualifiers
    * Fixed issue on shader name being overwritten when changing template
    * Fixed issue on copy/cut/paste not being correctly caught by nodes search bar

v1.3.0 dev 02:
* Fixes:
    * Fixed issue with Output Node Opacity Mask port not working with Custom Lighting 
    * Fixed errors with some nodes inside shader function

* Improvements:
    * Improved internal file reader to be more robust in case of trying to load in-existent files
    * Templates Manager can now also be initialized by its post processor in case of an ASE window is not open
    * 'Blend Operations' node show current selected Blend Op on node body
    * Locked Custom Light nodes from being used on Templates

v1.3.0 dev 01:
* New Features:
    * Templates
        * Create new shaders from already existing ones which serves as base/templates

* Fixes:
    * Fixed issue on ports internal data not showing on 'Append' node
    * Fixed infinite loop on 'Texture Coordinates' and 'Texel Size' nodes

v1.2.1 dev 02:
* Fixes:
    * Fixed issues with previews on 'Multiply' node
    * Fixed incorrect tooltip on 'Face' node
    * Fixed issue on 'Standard Surface Light' node where GI wasn't correctly picking normals
    * Fixed 'Texture Sampler' node not correctly generating code when connected to relays or shader functions
    * Fixed issue on 'Texel Size' and 'Texture Coordinate' nodes when referencing nodes not connected to Master Node

* Improvements:
    * 'Grab Screen Color' node now uses Unity default grab texture and allows overriding it like it's previous behavior

v1.2.1 dev 01:
* Improvements:
   * Major refactor on all nodes categories and colors to improve consistency
   * Added subtitle to 'Swizzle' and 'Component Mask' nodes to reflect their options
   * Added configurable background color for 'Commentary' nodes

* Fixes:
    * Fixed issue with lightmaps when using the 'Standard Surface Light' node on Custom Lighting Light Model
    * Fixed issue on overwriting default texture values on 'Texture Sample' node when loading values from material

v1.2.0 dev 02:
* Improvements:
    * Adding Call Mode into 'Custom Expression' node
        * On this mode all code written into the Code area will be directly injected into the shader code without being assigned to a local variable
        * The result written on the output port will be what is directly connected to the first input port ( named In ) which is not taken into account by the code expression. The In/Out pair will act as a simple relay.

v1.2.0 dev 01:
* Fixes:
    * Fixed issue on generating UI exception when sometimes iterating between Search Node Bar results
    * Fixed issue on Output node size increasing infinitely with shader name
    * Fixed issue on incorrect serialization on 'Texture Sampler' node

* Improvements:
    * Texture Object type nodes no longer auto-set the 'Texture Sampler' Normal Map option
        * Normal Map option was renamed to Unpack Normal Map 
        * A warning is shown if a Texture Object marked as normal map is connected to a 'Texture Sampler' node with the Unpack Normal Map options turned off

v1.1.0 dev 13:
* Fixes:
    * Fixed issue with reading incorrect legacy port info into 'Lerp' node
    * Fixed issue on cycling through deleted nodes when using the Nodes Search Bar
    * Fixed issue with incorrectly moving nodes nested into multiple 'Commentary' nodes
    * Fixed issue on Undo not registering internal node movement on 'Commentary' nodes
    * Fixed issue when using 'Virtual Texture Object' node on Vertex ports
    * Fixed issue with incorrectly moving selected nodes while resizing side menus

* Improvements:
    * 'Simple Contrast' node now always store its result on a local variable
    * Greatly improved 'Commentary' node:
        * You now can use box selection inside the node body
        * You now can create Wire nodes by double clicking on a wire inside the node body
        * You now select and drag the node via its header or by pressing anywhere on the node body having the Alt key down
        * You now need to double click the node header to be able to modify its comment directly from there

v1.1.0 dev 12:
* Fixes:
    * Fixed issue with creating legacy code for LOD Cross Fade on Unity v.2017 and above
    * Fixed issue on 'Lerp' node not adjusting correctly when disconnecting input ports
    * Fixing issue with node drag with snap 
        * Now done by having both Ctrl+Shift pressed

* Improvements:
    * 'Blend Operations' node now automatically adapts to input ports
    * Improving Search Bar focus behavior

v1.1.0 dev 11:
* Fixes:
    * Fixed incorrect behavior on creating connections through Alt + Shift
    * Fixed out of bounds exception caused by removing ports on shader functions
    * Fixed issue with 'Triplanar Sampler' node not deleting correctly in some occasions
    * Fixed ordering issues with Stencil Buffer example

* Improvements:
    * Overall improvements on nodes descriptions

v1.1.0 dev 10:
* Fixes:
    * Fixed new Billboard Ignore Rotation option incorrectly ignoring game object translation

v1.1.0 dev 09:
* Fixes:
    * Fixed issue with deprecated nodes warning message throwing an exception on recent Unity versions
    * Fixed 'Texel Size' node issues on Shader Functions

v1.1.0 dev 08:
* New Features:
    * New 'Keyword Switch' node

* Improvements:
    * Improved 'Lerp' and 'Clamp' nodes behavior
    * Added new improved dynamic 'Append' node which adapts to inputs and deprecated the old one
    * Billboards can now ignore object original rotation via its new Ignore Rotation toggle
    * New Soft Light option was added to 'Blend Operations' node

v1.1.0 dev 07:
* New Features:
    * Added support for Custom Subshader Tags on Output Node properties

* Fixes:
    * Fixed issue with having 'Custom Expression' nodes with similar port names

* Improvements
    * Small improvements on canvas zoom behavior 

v1.1.0 dev 06:
* New Features:
    * Added new nodes:
        * 'World Transform Params'
        * 'Vertex Bitangent'
        * 'Vertex Tangent Sign'

* Improvements:
    * Able to specify an HDR color on 'Color' node if the HDR attribute is set
    * Added previews to nodes:
        * Time
        * Object Scale
    * Improved how vertex data is being generated to prevent future issues

* Fixes:
    * Fixed incorrect order of instruction write on 'Texture Coordinates' node

v1.1.0 dev 05:
* New Features:
    * New 'Standard Surface Light' node ( exclusive to Custom Lighting Light Model )

* New Samples:
    * Double Layer Custom Surface

* Fixes:
    * Fixed issue with pasting nodes not refreshing external references from original ones
    * Fixed issue with generating helper local variable ids on several nodes which may lead to issues on shader functions
    * Fixed issue on 'Depth Fade' node
    * Fixed issue with not registering sampler dummies correctly when using 'Texture Coordinates' node with Tessellation
    * Fixed issue on multi-tabs with breaking all tabs except the focused one when dragging wires

* Improvements:
    * Added previews to nodes:
        *'World Space Camera Pos'
        *'Object Space Light Dir'
        *'World Space Light Dir'
        *'Light Color'
        *'Object To World'
        *'World To Object'

v1.1.0 dev 04:
* Fixes:
    * Fixed issue on 'Texture Coordinates' node generating wrong dummies on UV Sets different than 1
    * Fixed issue on 'Register Local Var' node usage with shader functions

* Improvements:
    * Setting Enable Instancing option default value to false
    * Adding Exact Conversion option into 'Gamma To Linear' and 'Linear To Gamma' nodes for more accurate results

v1.1.0 dev 03:
* Fixes:
    * Fixed issue on 'Pi' node
    * Fixed issue on 'Texture Coordinates' node not generating unique names when used on vertex body
    * Fixed issue with incorrectly counting amount of 'Virtual Texture Object' nodes on graphs
    * Fixed issue on 'Texture Array' drawers
    * Fixed issue on 'Remap' node preview preventing division by zero

* Improvements:
    * 'Texture Array' node:
        * Now work with shader functions 
        * Added derivative option to 'Texture Array' node
        * Minor tweak on tooltip text

* New Features:
    * New Community Node 'GlobalArray' submitted by Vincent van Brummen and created by Johann van Berkel
    * Added new Enable Instancing toggle into Rendering Options to be able to activate instancing without having to use Property nodes

v1.1.0 dev 02:
* Improvements:
    * 'Vertex TexCoord' and 'Swizzle' node types can be selected from node body

* Fixes:
    * Fixed issue with 'Grab Screen Color', 'Get Local Var' and 'Texture Sample' nodes loosing references inside Shader Functions
    * Fixed issue on not correctly registering all Grab Passes from multiple 'Grab Screen Color' nodes
    * Fixed small issue on 'Commentary' node not being able to focus on comment text field when created

v1.1.0 dev 01:
* Fixes:
    * Fixed issue with being able to open recently created shader multiple times

* Improvements:
    * Added preview for 'Screen Position' node
    * 'Append' output type can be selected from node body
    * Small overall optimizations

v1.0.0 dev 12:
* Fixes:
    * Fixed wrong casting issues on dynamic type nodes
    * Fixed lost reference when deleting 'Grab Screen Color' node

v1.0.0 dev 11:
* New Features:
    * Additional includes (.cginc) can now be used into an ASE shader via the Additional Includes sections on the Output node
        * Their contents can be accessed via the 'Custom Expression' node
    * Added Node Search bar to quickly find nodes on the canvas
        * Ctrl + F: Shows Search Bar
        * Enter/Return/F3: Goes to next occurrence
        * Shift + (Enter/Return/F3): Goes to previous occurrence
        * Escape: Hides Search Bar

* New samples:
    * UV Light Reveal 

* Fixes:
    * Fixed issue on creating unnecessary casts from floats
    * Fixed minor issue on GPU Instancing sample
    * Fixed minor UI issues on 'Reflect' and 'Refract' nodes
    * Fixing shader paths for Community Shaders
    * Fixed issue on incorrect cast when using Floats and Ints in certain nodes
    * Fixed issue on resetting in certain situations vertex local variables generated during Output Node fragment code generation
    * Fixed issue on property name update in 'Grab Screen Color' node

* Improvements:
    * Improved nodes local variables reset behavior to prevent future issues
    * Added previews to 'Gamma To Linear' and 'Linear To Gamma' nodes
    * Forcing 'Dot' and 'Normalize' nodes to store results in local value and prevent with power operations

v1.0.0 dev 10:
* Fixes:
    * Fixed issue with temporary variable assignment Id on 'Texture Coordinates' node

v1.0.0 dev 09:
* New Features:
    * New 'Static Switch' node which allows creation of shader variants

* Fixes:
    * Fixed minor issue on reading inputs from dynamic 'Add' and 'Multiply' nodes on older shader versions
    * Fixed issue on Parent Graph attempting to delete in-existent connections
    * Fixed issue with always disabling Light Maps when using Tessellation
    * Fixed issue with Texture Nodes reference drop down selector showing incorrect labels both on 'Texture Sampler' and 'Texture Coordinates' nodes
    * Fixed issues on incorrect loosing references with 'Texture Sampler' node on Reference mode

* Improvements:
    * Improved 'Append' node connection management
    * Added Local Var selector directly on 'Get Local Var' node body

v1.0.0 dev 08:
* New Features:
    * New Output node Rendering Options
        * Disable Batching
        * Ignore Projector
        * Force No Shadow Casting

* Fixes:
    * Fixed issue with new dynamic 'Add' and 'Multiply' nodes not registering port creation/destruction into Undo system
    * Fixed issue on 'Grab Screen Color' node duplicating code
    * Fixed issue with Opacity Mask port being incorrectly Enabled/Disabled on certain situations
    * Fixed issue on 'Get Local Var' nodes getting wrong ids on certain situations when a 'Register Local Var' node is deleted
    * Small fix to force property name update when changing type on property nodes
    * Fixed issue where 'View Dir' node was generating code in the wrong space when in vertex function for both world space and tangent space
    
v1.0.0 dev 07:
* Fixes:
    * Fixed name conflict on 'Custom Expression' node
    * Fixed issue for both normal input in indirect lighting nodes that were asking from normal in world space instead of tangent space

v1.0.0 dev 06:
* New Features:
    * Added LOD Cross Fade support for LOD groups ( located in the Output node Rendering Options tab )

* Improvements:
    * 'Add' and 'Multiply' nodes can have more than 2 input ports ( max 10 )
    * Minor improvements on several nodes
    * Refraction port use Unity's grabpass by default so it can pick other refraction materials
    * Avoiding possible compiler misunderstandings with System.Type calls
    * Ensuring variables/functions created by custom expressions have unique names
    * Auto enabling instance mode on material ( if on Unity 5.6 or above ) when detecting instance mode on ASE shader
    * Improved zoom behavior

* Fixes:
    * Fixed issue when remapping ports from very old shaders
    * Fixed swizzle issue on 'Vertex Position' node
    * Fixed matrix 'Invert' node
    * Fixed SimpleGPUInstancing sample not fully batching on Unity 5.6
    * Fixed opening a SF in more than one tab after creation
    * Fixed header click to edit name when zoomed out
    * Fixed both Commentary node side menus resize not following the mouse movement correctly

* New Shader Functions: ( AmplifyShaderEditor/Examples/Assets/ShaderFunctions )
    * Simple HUE
    * SphereMask

v1.0.0 dev 05:
* Fixes:
    * Fixed issue with conditional 'If' node
    * Fixed issue with 'Vertex Position' node swizzle in Local Vertex Ports

* Improvements:
    * Caching instanced property nodes into local variables to prevent multiple UNITY_ACCESS_INSTANCED_PROP() on them
    * Added support for samplers types into 'Custom Expression' node

v1.0.0 dev 04:
* Fixes:
    * Fixed node drag and drop issue from palette
    * Fixed issue with online reference button having a "too-large" click box
    * Palette Menus now display the correct cursor on mouse hover
    * Fixed clicking Enter on palette without selecting a node
    * Changing lighting models should now show the error messages correctly
    * Fixed issue of Custom Light nodes not loading properly

* Improvements:
    * Added Per Renderer Data tag to Properties available Attributes
    * Adding help box into 'Virtual Texture Object' with additional info

v1.0.0 dev 03:
* New Features:
    * Custom Lighting 
        * New Nodes: ( can only be used on this light model )
            * Indirect Diffuse Light
            * Indirect Specular Light
            * Light Attenuation

* New Samples:
    * Custom Lighting Toon

* Fixes:
    * Fixed issue when zooming with Alt + Right Mouse button
    * Fixed issue with window not detecting graph type on Unity load
    * Fixed issue on 'Debug Switch' node not loading properly
    * Fixed issue on assigning invalid cultures when an error/exception occurred inside ASE

* Improvements:
    * Context Palettes now allow  Tab / Shift Tab to select between nodes instead of mouse selection (confirms with Return/Enter key)
    * Added previews for 'Debug Switch' and 'Toggle Switch' nodes
    * Added link to node documentation on its tooltip
    * Small optimization on all nodes overall
    * Preventing ASE to crash if some faulty class/dll is present on the project

v1.0.0 dev 02:
* Fixes:
    * Preventing shadow caster error on using 'Vertex TexCoord' with 'Vertex Normal'

v1.0.0 dev 01:
* Fixes:
    * Fixed issue on not recognizing Tessellation port correctly when at Lambert or BlinnPhong light models
    * Fixed issue on dragging nodes via Alt mode not respecting ports unique ids when creating connections
    * Fixed minor typo on 'Switch by Face' node
    * Fixed minor issue when loading LoadPolyWater example

v0.7.2 dev 08:
* Fixes:
    * Fixed issue generating input ports instructions on 'Custom Expression' node

v0.7.2 dev 07:
* New Features:
    * Added support for multiple ASE windows opened simultaneously

* New Samples:
    * Animated Fire with Shader Functions

* Improvements:
    * Forcing InvariantCulture on ASE execution cycle to prevent issues with number parsing
    * 'Texture Sampler' node no longer shows it's sampler properties when a 'Texture Object' node  is connected to it
    * Improved redundancy awareness on 'Virtual Texture Object' and 'Texture Sampler' nodes
    * Improved 'Virtual Texture Object' tooltip
    * Removed Return button from Shader Functions since it is now useless with new multi-tab behavior

* Fixes:
    * Fixed issue on changing Normal map option in 'Texture Sampler' node not changing its output type
    * Changed 'Virtual Texture Object' node channel name to 'Layer' and fixed its default value not showing up correctly
    * Virtual textures now generate properties with their correct name (requires user changes to the virtual texture itself)
    * Fixed issue that break compiling when a missing shader function was present
    * Forcing internal data update for shader function Output nodes to prevent errors when they are disconnected
    * Fixed small issue with shader function nodes being stuck on selection when double clicking on them

v0.7.2 dev 06:
* New Features:
    * Added 'HSV To RGB' and 'RGB To HSV' nodes

* Improvements:
    * 'Custom Expression' node with a return instruction on its Code text area generates a function with the code contents thus enabling multiple instructions lines on its body
        * Added small info text on node properties to explain its behavior
        * Added new name field ( can also be edited directly on node by double clicking on it ) which is used to name the generated function/ local variable
    * Small refactoring on some classes for consistency and warning removal from Visual Studio

* Fixes:
    * Fixed issue on some changes not being correctly caught on setting Blend Render Type
    * Fixed issue with Unlit Light model doubling the value set on the Emission output port
    * Small fix on title updates when using Shader Functions
    * Removed warning from unused legacy source code on 'Register Local Var' and 'Get Local Var' nodes
    * Fixed issues on incorrect  casts on 'Texture Sampler' node
    * Fixed issues on incorrectly snapping wires into hidden ports

v0.7.2 dev 05:
* Improvements:
    * Changed tool tip display to trigger when mouse is on top of the node ( now displays below the node)
    * Shader Functions 
        * Added default values for input node in SF (these are used when there's no connection) 
        * Added port restrictions to dynamic node types
        * Changed way input node work with restrictions when changing type to prevent invalid connections

* Fixes:
    * Fixed minor typo on 'Rotator' node

v0.7.2 dev 04:
* Fixes:
    * Fixed multiple issues on save behavior when changing modes
    * Fixed issue with shader functions not assigning the main node correctly
    * Fixed issue on Project Window Change callback
    * Fixed graph count increasing on shader switch
    * Fixed version numbering in function nodes
    * Fixed nested SF issue with inputs

v0.7.2 dev 03:
* Fixes:
    * Fixed issue with 'Vertex TexCoord' not writing properties correctly into shader meta

v0.7.2 dev 02:
* Fixes:
    * Fixed cast and port activation issues on Blend Nodes
    * Fixed various issues with SF:
        * Saving no longer deselects
        * Reordering is now working properly
        * Autocast now has port restrictions into account and deletes with warning when possible
        * Sampler types no longer duplicate

* Improvements:
    * Texture Objects node family  can now be set as Globals

v0.7.2 dev 01:
* New Features:
    * Added Shader Functions
    * Added new 'Object Scale' node

* Fixes:
    * Fixed multiple issues with Copy/Paste
    * Fixed issues with nodes on Vertex Function
        * 'Fresnel'
        * 'Posterize'
        * 'Heightmap Texture Blend'
        * 'Unpack Scale Normal'
    * Fixed issue with incorrect data read from 'Texture Coordinates' nodes on versions bellow 0.5.0 dev 003
    * Fixed issue on inverted Receive Shadows toggle

* Improvements:
    * Can Copy/Paste between different Shaders and Shader Functions 
    * Shader properties created by Refraction, Translucency, Mask Value and Tessellation now appear on the Output node Material Properties list and can be reordered
    * Preventing UndoParentNode to generate DefaultValue conflicts caused by other plugins
    * Removed warnings generated on some situations by the 'Screen Position' node

* New Samples:
    * LowPolyWater by The Four Headed Cat
    * ForceShield by The Four Headed Cat

v0.7.1 dev 02:
* Improvements:
    * Improved 'Texture Coordinates' node and added new Tex input port into it
    * Improved local variable usage on several node generated code to improve overall shader instruction count
    * 'Vertex Position' node now has new Size property

* Fixes:
    * Fixed issues on 'Vertex to Fragment' node
    * Fixed issue on loading an ASE shader with its window already opened but tabbed and not visible during play mode
    * Fixed multiple issues with 'Grab Screen Position' node usage on Vertex function
    * Fixed issue with Forward Shadows not being correctly written when Custom Shadow Caster was active
    * Fixed issues with Blend nodes usage on Vertex function
    * Fixed issues with 'Dithering' node usage on vertex function and when Tessellation is active
    * Fixed issues with 'Screen Depth' node usage on vertex function and when Tessellation is active
    * Dithering sample now works while Tessellation is active

v0.7.1 dev 01:
* New Features:
    * Alt + Node Drag to Auto-(dis)connect node on existing wire connection

* Improvements:
    * Added new Tex Input Port into 'Texel Size' node
    * Optimized nodes list usage on palettes (API)
    * Improved retro-compatibility handling with adding new ports on already existing nodes (API)

* Fixes:
    * Fixed issue on horizontal scroll bar not appearing on Helper Window

v0.7.0 dev 03:
* New Features:
    * Added 'Face' node
    * Added 'Switch by Face' node

* Fixes:
    * Fixed issue on not setting shader version on graph when creating a new empty one which lead to copy/paste issues
    * Fixed wrong port type assignment and incorrect conditional operator usage on community 'Compare ...' nodes
    * Fixed issue with creating a material from a shader already with properties in Unity 5.6
    * Fixed multiple UI issues on Retina MacBook

* New Samples:
    * Highlight Animated by The Four Headed Cat
    * 2 Sided by The Four Headed Cat
    * Two Sided with Face

v0.7.0 dev 02:
* Improvements:
    * Improved Float to Vector auto-cast
    * Double-clicking on a 'Get Local Var' node focus on its referenced 'Register Local Var' node

* Fixes:
    * Fixed issue with keyboard shortcuts on Mac
    * Fixed renaming issues with 'Triplanar Sampler' node
    * Fixed issue on property nodes UI not refreshing on Undo
    * Fixed issues on 'Fresnel' and 'Vertex Normal' related with normal generation
    * Fixed typos on POM
    * Fixed issue with Wire node deletion
    * Fixed auto-change port types issues on all Compare nodes

v0.7.0 dev 01:
* Improvements:
    * Greatly improved Undo
    * Colored Port Mode behaves as a normal toggle and doesn't require double tap on W key

* New Samples:
    * Hologram by The Four Headed Cat

* Fixes:
   * Fixed issue on deleting nodes with Wire nodes on their connections
   
v0.6.1 dev 05:
* Fixes:
    * Fixed issue with custom Shadow Caster on Vulkan

v0.6.1 dev 04:
* Improvement:
    * Renaming 'Texture Sampler' Type property Instance to Reference and prevent confusion with GPU Instanced properties

* Fixes:
    * Fixed issue on unnecessary saves on Live mode 
        * Also increased Inactivity time from 0.5s to 1s
    * Fixed issues on some node interactions not being detected by live mode ( and thus not being flagged to save )
    * Fixed issue on 'Rotator' node not correctly generating local values according to vertex/frag
    * Fixed issue on 'Texture Coordinates' node when defining its Inputs with Tessellation active
    * Fixed issue with custom Shadow Caster on Metal IOs
    * Fixed small typo on Tessellation Shader Model warning message

v0.6.1 dev 03:
* New Features:
    * Adding Fallback shader picker on Master Node
    * Adding Shader LOD value modifier on Master Node

* Improvements:
    * Node property title changes according to selected node
    * Added Multi-Line mode to wires ( Ctrl + W ) 
    * Added ability to change 'Triplanar Sampler' node name 
    * Improved wire connections rendering while zoomed
    * Tweaked live mode to save only when user is inactive for 0.5s

* Fixes:
    * Small node resizing issues fixed
    * Fixed issues on Live mode not catching node connections and creation correctly

v0.6.1 dev 02:
* New Features:
    * Added 'Triplanar Sampler' node
    * Added Vertex Output ( can now change from Relative/Local Vertex Offset to Absolute/Local Vertex Position )
    * Added Smear Sample
    * Added Unlit Light Model
    * Added simpler 'Time' node 
    * Added 'Depth Fade' node
    * Added 'Camera Depth' Fade node

* Improvements:
    * Adding node info into Helper Window
    * Adding drag and drag valid unity assets list to helper window
    * 'Screen Position' and 'Grab Screen Position' now have a Output dropdown on its properties instead of a Toggle 
    * Improved GPU instancing example by adding a C# illustrating how to set instanced properties

* Fixes:
    * Fixed issue on preview materials not being initialized after returning from play mode
    * Fixed issue on local variables reset
    * Fixed issue with tangent and bitangent previews
    * Fixed billboard issue with non-uniform scaling
    * Fixed issue on Tex ports counting as having valid internal data on Node Properties UI
    * Fixed issue on using 'Texture Sampler' or 'Screen Color instances on Master Node Debug port

v0.6.1 dev 01:
* Improvements:
    * Activating internal data into 'Object To World' and 'World To Object' nodes and setting it to (0,0,0,1) by default
    * 'Texture Array' nodes can be created by dragging a Texture 2D Array object into ASE canvas
* Fixes:
    * Fixed issue on 'Texture Array' node when connecting it to Vertex Ports
    * Fixed issue on 'Vertex TexCoord' not generating correct source according to their properties
    * Fixed issues on MourEnvironment, SandPOM and WaterSample shaders

v0.6.0 dev 01:
* Improvements:
    * Added Texture Coordinate Coord Size parameter for 'Vertex TexCoord' node
* Fixes:
    * Fixed issue when doing custom shadow caster with translucency on deferred mode
    * Fix for texture coordinates zeroing out Z and W
    * Fixed issue with input port internal name not being set correctly
    * Fixed issue with custom shader inspector on unity 5.6
    * Fixed shadows issue on Matcap example
    * Fixed 'Virtual Texture Object' sampling the correct UVs when not connected

v0.5.1 dev 012:
* Fixed issue with LightColor node not generating the proper values
* Fixed issue when doing custom shadow caster with translucency on deferred mode
* Made the code generation compiler friendly because of unity 5.5 and up changes

v0.5.1 dev 011:
* Adding new Billboard option into Master Node
* Control key can be also used to append nodes to selection
* Fixed issue with not updating material inspector in real time ( because out of focus ) when changing properties on canvas
* Fixed cast issues on object picker with 'Texture Sample' and 'Texture Object' nodes
* Added Mask buttons on Previews
* Improved overall editor performance

v0.5.1 dev 010:
* Added 'Desaturate' node
* Fixed small visual issue with Color Mask UI 
* Improved overall UI performance

v0.5.1 dev 009:
* Linking both Up/Down keys and right mouse dragging to scroll behavior into menus
* Canvas zoom can be changed by right mouse dragging while pressing Alt key
* Fixing multiple issues with 'Swizzle' node
* Heavily optimized drawing the node lines 
* Fixed issue with loading default shaders to ports

v0.5.1 dev 008:
* Fixed issues when using line feed on 'Custom Expression' node code area
* Fixed wires and previews displaying on top of the title bar
* Fixed order issues on 'Commentary' node
* Fixed issue with BurnEffect sample
* Majorly improved Previews update speed
* Added LOD levels to previews ( sampler and texture arrays ) 
* Added many more node previews 
* Updated TriplanarProjection and ParallaxMappingIterations samples
* Optimization on drawing wires
* 'World Normal', 'World Reflection' and 'Fresnel' input ports now modify their previews
* Improved Nodes Graph internal ordering to correctly create connections on shader load

v0.5.1 dev 007:
* Fixed issues with 'Texture Coordinates' node usage with Tessellation
* Fixed swizzling issues on 'View Dir' node

v0.5.1 dev 006:
* Added new Helper Window accessible via the right most button on the graph window
* (De)Activating Tessellation and Outlines forces shader to save
* Expanded the amount of nodes with available preview
* Added fail safe to continue loading shader if in-existing community nodes are detected 
* Added Normal Map unpacking to 'Texture Array' node and updated its sample
* Fixed issues on Debug Port usage
* Fixed issues on 'Flipbook UV Animation' when property nodes are connected to rows and column input ports
* Fixed issues on Not configuring 'Texture Array' node ports after read
* Fixed issues on Major fix on register/get local var mechanics
* Fixed issues on Adding a space on the node palette search when opening it via space bar
* Fixed issue on ignoring color masks setup on certain situations
* Forcing default values on input port internal data if an exception is caught

v0.5.1 dev 005:
* Added new Curvature Parameter for 'Parallax Occlusion Mapping' Node
* Added 'World To Object' node
* Added 'Object To World' node
* Fixed issue on 'World Normal' node
* Fixed issue on 'World Tangent' node
* Fixed issue on 'World Bitangent' node
* Fixed issue on 'World Reflection' node
* Fixed issue on 'Register Local Var' node
* Fixed issue with Tessellation used with Custom Shadow Caster
* Fixed issue with Mip Level not being used with 'Texture Sampler' nodes on Vertex Ports
* Fixed issues with Master Node Debug port usage

v0.5.0 dev 005:
* Applied overall UI changes from Master Node into all other nodes
* Added Node Previews
* Added new Frame Title parameter on 'Commentary' nodes
    * Auto focus on new Frame Title textfield when node is created
* Added new Soap Bubble sample using both Reflection and Refraction
* Fixed issue with 'Custom Expression' node
* Fixed issues on 'Scale' node
* Fixed issues on 'Panner' node
* Fixed issues on 'View Dir' node
* Fixed issues on 'Substance Sample' node
* Fixed Repaint issues on ASE custom material editor
* Fixed issue with texture defaults not being correctly written on shader meta
* Fixed issue on reading alpha:fade option from older versions
* Tweaked 'Component Mask' node
* Tweaked 'Pi' node
* Improved 'Substance Sample' node previewer 
* Refraction to now have Specularity into account
* Removed warnings on importing ASE to Unity v5.6.0 

v0.5.0 dev 004:
* Added new Outline option on Master Node properties
* Tweaked Tessellation material update

v0.5.0 dev 003:
* Fixed issue with Live Mode load/save state 
* Fixed repaint issue with picking ports
* Tweaked 'Substance Sample' node preview
* Adding Toggle Attribute to 'Switch Toggle' node

v0.5.0 dev 002:
* 'Texture Coordinate' now support float3 or float4 output types 
* Changed Colored ports saving mechanism 
* Tweaked how ports are saved/loaded via shader meta to easily modify existing nodes port amount without breaking older versions (API)
* Tweaked Simple Noise example
* Tweaked Read Atlas examples
* Tweaked Translucency example
* Minor tweak on 'Texture Sample' node
* Fixed issue with local variable declaration on Master Node Debug port 
* Fixed issue with Screen Space Curvature example
* Fixed issue with reading fade parameter on master node 
* Fixed issue with Transparency shader

v0.5.0 dev 001:
* Fixed issues with 'Texture Array' node
* Fixed issues with 'Texture Coordinates' node
* Fixed issues with Tessellation example on MacOs
* Fixed issues on multiple examples with Unity beta version 6 and above
* Added new 'Substance Sample' Node
* Added example using the new 'Substance Sample' node located at Examples/Official/Substance
* Added Attributes to Property Nodes
* Added Conditional 'If' Node with Dynamic Branching option
* Tweaked 'Flipbook UV Animation' node

v0.4.1 dev 002:
* Fixed issue 'Flipbook UV Animation' node not resetting properly and added a start frame parameter

v0.4.1 dev 001:
* Fixed issue with Texture Array sample

v0.4.0 dev 003:
* Default Alpha mode set to Transparent and not Alpha Pre-Multiply
* Minor tweak on node sorting on palette windows
* Minor tweak on Master Node Property UI
* Added new Rendering Options foldout on Master Node properties
* Added check to prevent division by zero warning with 'Grab Screen Position' and 'Screen Position' nodes

v0.4.0 dev 002:
* Forcing LF on all shaders to prevent CRLF mixed with LF when upgrading them  
* Fixed issues with custom shader inspector

v0.4.0 dev 001:
* Minor fix on 'Grab Screen Position' node
* Added new Refraction port into Master Node. Only works correctly with Unity 5.5.1 p1 and above due to an internal unity issue
* Added new Refraction Example ( AmplifyShaderEditor/Official/ObjectNormalRefraction )
* Added new Vertex Normal port into Master Node
* Small update to Material and Shader mode borders
* Parameter types can now be changed from node itself on property nodes via dropdown on its upper left corner 
* Various fixes from the way the Blend Mode works to take new translucent option into account
* Fixed issue with connections from cache when changing Light Mode on Master Node not respecting port availability
* Changed Refracted Shadow demo blend mode
* Fixed Vertex Offset issue with custom shadow caster
* Small fix to auto change blend mode on rendertype and render queue changes
* Fixed some samples with wrong version or wrong connections
* Fixed UI problems in Unity Personal skin

v0.3.2 dev 003:
* Fixed issue with 'Multiply' node
* Fixed issue with 'Divide' node
* Fixed issue with 'Texture Sample' node
* Fixed issue with 'Dot' node
* Tweaked 'Fresnel' node to use Unity's interpolators and made the default values match Schlick Fresnel
* Tweaked 'World Normal' node to prevent multiple normals generation
* Added 'Texture Array' node
* Added 'Linear to Gamma' and 'Gamma to Linear' nodes
* Majorly revamped the UI for the master nodes options
* Revamped Blend Modes and added additional options
* Added pos-load test on nodes invalid connections to prevent issues with older ASE versions 

v0.3.2 dev 001:
* Added custom shadow caster
* Small fix to both emission and alpha on Fade mode
* Fixed minor issues on reading shaders from older versions( < v0.2.0 dev 002 )
* Fixed issues on 'Custom Expression' node
* Fixed issues with 'Grab Screen Position' node
* Property nodes with Parameter Type set to Global doesn't force _ on the parameter internal name

v0.3.1 dev 009:
* Fixed 'Grab Screen Color' node issues
* Minor tweaks on Context menu
* Tweaked 'Screen Position' and 'Grab Screen Position' behavior
* Added switching of input ports connections by holding the CTRL key
* Added removing of input ports connections by double clicking with the left mouse button on them
* Forcing Shader Model to at least 4.6 if Tessellation is active

v0.3.1 dev 008:
* Small fix to 'Virtual Texture Object' node
* Fixed issues on 'Texture Sample' node
* Fixed issue on not correctly unregistering nodes from 'Commentary' nodes when they were deleted 
* Fixed issue when reading old shaders created with v0.2.4 dev 004
* Fixed issue with 'Texture Coordinates' node when using Tessellation
* Fixed issues and tweaked overall normals generation
* Fixed issue on 'Vector From Matrix' node
* Fixed issue on ASE canvas camera incorrectly panning when hitting a tooltip with Middle/Right Mouse Button
* Fixed connection errors with 'Vector From Matrix' node 
* Fixed issue with 'Vertex To Fragment' node
* Deprecated 'Local Position' node 
* Added 'Grab Screen Position' node 
* Tweaks on nodes and ports names to maintain overall consistency
* Added new Scale and Offset option on 'Screen Position' node
* 'Register Local Var' node now also has system to prevent duplicate names

v0.3.1 dev 007:
* Added auto-order option into 'Register Local Var' node
* Added new 'Improved Read From Atlas Tiled' example 
* Added 'Simplified Fmod' node

v0.3.1 dev 006:
* Fixed control argument exception when deleting connection with Alt key on selected node
* Fixed issue with 'Switch Toggle' node

v0.3.1 dev 005
* Side menus are now resizable
* Tweaked 'Weighted Blend' node
* Added 'Summed Blend' node
* Added 'Toggle Switch' node
* Added new 'Scale and Offset' node
* Fixed issues on 'Vertex Binormal World' and '[VS]Vertex Tangent' nodes
* Fixed issues with 'Texture Sample' nodes created via dragging a texture to ASE
* Fixed issue with 'Scale' node 
* Fixed issues on incorrectly reading 'Receive Shadows' parameter from ASE shader previous to v0.2.5

v0.3.1 dev 004
* Fixed issues with accessing 'Texture Coordinates' node when tessellation is active

v0.3.1 dev 003
* Fixed yet another issue with accessing 'Texture Coordinates' node on vertex function
* Reverted shader update mechanism  after save to previous old one until issue reported by Seith is fixed

v0.3.1 dev 002
* Fixed issues with accessing 'Texture Coordinates' node on vertex function

v0.3.1 dev 001
* Improved overall editor UI
* Improved Live Mode
* Nodes can generate shader comments ( API )
* Each port can now have multiple restrictions ( API )
* 'Texture Object' can now only be connected to 'Texture Sample' nodes
* Added 'Switch' toggle node

v0.3.0 dev 005
* Auto adding AMPLIFY_SHADER_EDITOR symbol on current target group when initializing ASE ( API - to be used on external community nodes )
* Added keyboard shortcut [F5] to force available nodes refresh ( API )

v0.3.0 dev 004
* Fixed yet another issue with local variables generation

v0.3.0 dev 003
* Fixed crash from infinite loop generated on port 'Tex' at 'Texture Sample' node
* Fixed cast issue when using internal port data on some nodes
* Fixed issues with local variables generation  
* Tweaked Vertex Displacement port on Master Node
* Added ability to specify range of valid data types for input ports ( API )
* Locked 'Tex' port from 'Texture Sample' node to only allow connections to 'Texture Object' nodes

v0.3.0 dev 002
* Updated POM to clip edges using a tilling parameter 
* Updated the sand POM example and its height texture
* Updated Water sample
* 'Vertex NormalWorld', 'World Position' and 'View Dir' nodes now also output into vertex offset correctly
* All editor resources are loaded via their own guid
* Added Tessellation port into master node to be able to create custom Tessellation behaviors
    * Tessellation parameters ( excluding Phong ) on Master Node Properties will be deactivated if its port is being used   	
    * Created Nodes for each of the builtin Tessellation functions
        * Distance-base Tessellation
        * Edge Length Tessellation
        * Edge Length Tessellation with Cull
* Fixed issues with not creating local variable correctly if graph is shared between vertex and frag ports
* Fixed issue with local variables created on automatic casting not taking port category into account
* Fixed node width issue regarding its header title size

v0.3.0 dev 001
* Fixed issue on where deprecated nodes needed to be available to be replaced by their replacement type
* Fixed issues on all conditional nodes
* Fixed issue on local variable creations on vertex shader
* Fixed issue on 'Commentary' node
* Amplify Texture dependency is dynamically set through asset guid
* Texture Sampler will quietly ignore virtual object if AT is not found in project and will not generate a broken shader
* Deprecated nodes are automatically excluded from the palette
* Updated version in all samples
* Optimized 'Multiply' and 'Divide' nodes 
* Added Edge Length based tessellation
* Added Fixed Amount based tessellation

v0.2.6 dev 001
* Fixed issue on 'Virtual Texture Object' node
* Fixed issue on 'If' node
* Fixed issues in 'Parallax Occlusion Mapping' node
* Fixed issues on 'Texture Sampler' node
* Fixed issue for translucency on point lights
* Fixed issues on 'Texture Coordinates' node
* Fixed issue on not correctly syncing ASE when when hitting paste button on our custom inspector
* Avoiding null pointer exception when compiling a 'Texel Size' node without references 
* Re-Organized ASE folder system and added initial pop-up window to clean old/deprecated data
* Tweaked Default/Material values UI on Property nodes
* Node Properties window can now be show by double clicking a node
* Renamed Uniform parameter type to Global 
* Added Distance-Based tessellation. Can be activated/configured on Master Node properties
    * Added Tessellation sample
* Added emission baking support. Queue must be set to "Geometry" to work properly
* Added Tiled Atlas sample
* Added scenes for each sample
* Added tool tips for Master Node properties 

v0.2.5 dev 004
* Added Parallax Occlusion Mapping node (uses linear search with customizable samples in conjuntion with interval mapping for refinement of sidewalls)
* Added simple snapping behavior when moving nodes (left-control)
* Fixed background grid image sliding when zooming
* Fixed issue with 'Texcoord Vertex Data' on writing
* Fixed issues with default values of 'Virtual Texture Object'
* Fixed issues when drawing 'Matrix3x3' and 'Matrix4x4' nodes
* Fixed compilation error when creating builds

v0.2.5 dev 003
* Fixed issues on 'Texture Coordinate' node
* Fixed issues with 'Texture Sample' node not reading the correct values from older shaders versions
* Fixed issues with instanced texture samples
* Fixed issues with 'Texel Size' node
* Fixed issues with adding new categories on community created nodes 
    * Custom category colors can now also be set up via NodeAttributes(...) 
* Created simpler method ( GeneratePortInstructions(...) ) to generate input instructions. Handy for community members which are creating new custom nodes
* Fixed issue with propagating incorrect port types on master node when loading shader from older versions
* Fixed issues with parallax example
* Alpha channel/Opacity port is forced to 1 if Keep Alpha is set to true and port is not connected to prevent UI issues
* Added index property in '[VS] Vertex TexCoord' node and marked '[VS] Vertex TexCoord1' node as deprecated 
* Tweaked collision area on minimize/maximize buttons on lateral windows
* Small optimization on 'Custom Expression' node
* Added support for virtual texturing via Amplify Texture
* Community Node additions
    * Jason Booth
        * Added 'Vertex To Fragment' node

v0.2.5 dev 002
* Added 'Texture Object' node
* Tweaked 'Texture Sample' node behavior to use the new 'Texture Object' node
* Added Stencil Buffer support
* Added Depth foldout with access to ZWrite, ZTest and Offset configuration
* Added AMPLIFY_SHADER_EDITOR preprocessor directive
* Fixed issue on not resetting instance variables counter on reset/load 
* Overall fixes on node UI and its adaptation when zooming out
 

v0.2.5 dev 001
* Added Color Mask option on Master Node
* Added access to additional UV sets on "Texture Sample" and "Texture Coordinates" nodes
* Fixed issue when attempting to connect a wire to a locked port
* Fixed issue with incorrectly adding '#pragma multi_compile_instancing' on non instanced property shaders
* Minor tweak on palette foldout behavior


v0.2.4 dev 007 
* Fixed issue on wrong auto-snapping wires with invisible, locked ports
* Fixed issue with version control on Master Node
* Added Transmission input port on Master Node
* Added 'Mip Mode' in 'Texture Sample' node 
* Property names can now be changed directly on node by double clicking on it
* Properties can be reordered through drag and drop operations on the Master Node properties via the Available Properties foldout area
* Min/Max values on 'Ranged Float' nodes can be modified directly on canvas

v0.2.4 dev 006 ( for internal reasons we had to skip dev 005 )
* Fixes issues on 'Panner' node
* Fixed issues with not correctly generating local variables according to port category
* Tweaked behavior and fixed issues on the 'Texture Coordinate' node
* Fixed issues on 'Texel Size' node
* Fixed issues on 'Local Vertex Pos' node
* Fixed issues with Burn Effect Sample
* Removed positive number restriction from Master Node 'Queue Index' property
* Custom Material Inspector can be selected/changed on Master Node
    * Done through the Custom Editor property
    * You can always reset to our own by hitting the Reset button next to hit
* Updated Rim Light Sample to use the new Space option on the 'View Dir' node
* Updated Parallax Sample to use the new Space option on the 'View Dir' node
* Added 'Translucency' input port into Master Node 
* Added 'Dithering' node
* Added Matcap Sample
* Added Dithering Sample
* Added Rendering Platforms selector on Master node
* Added Water Sample on a small terrain in the Sample Scene

v0.2.4 dev 004
* Fixed issues with wire shader
* Fixed issues with 'Texture Coordinates' node
* Removed warnings occurring on Unity v5.5
* Fixed issue with 'Append' Node 
* Fixed issue with ASE Custom Material Inspector 
* Tweaked 'Local Vertex Pos' node to output differently if generating code for vertex or fragment ports

Release Notes:
v0.2.4 dev 003
* Added Texture Reference dropdown to 'Texture Coordinates' node
* Added Render Path dropdown in Master Node
* Tweaked 'View Dir' node so you're able to choose between getting the result in tangent or world space
* Tweaked 'World Space Light Dir' to no longer use internal input port data when nothing is connected, instead worldPos is automaticaly fed into it
* Added Unity version check for wires shader and fix compatibility issues
* Added Normalize toggle into 'Screen Position' node 
* Community Node additions
    * Tobias Pott
        * Added 'Swizzle' node

v0.2.4 dev 002
* Added 'Layered Blend' node
* Added 'Weighted Blend' node
* Added 'Texel Size' node
* Merged '[VS] Vertex Color' and 'Vertex Color' nodes in order to avoid further confusions and marked the first one as deprecated
    * Node internally changes its output if it's writing to a vertex or fragment port
* Added 'Surface Depth' node
* Added 'Screen Depth' node
* Fixed issue with property nodes uniform variables not taking selected precision into account

v0.2.4 dev 001
* Added 'Parallax Mapping' node 
* Added 'Negate' node 
* Added Fake Window user sample 
* Added Parallax Mapping example with 4 iterations using the basic Parallax Mapping node 

v0.2.3 dev 002
* Added 'Custom Expression' node
* Precision used is now the least between the one selected in the node and main one selected on the master node
* 'Register Local Var' and 'Get Local Var' nodes can now be used on Master Node Vertex ports
* Improved wires visuals
* Fixed issue with local variables generation
* Fixed issue with switching port internal data from float to int
* Fixed cast issue with 'Remap' node
* Added all the supported shader models into the Master Node dropdown
    * When creating a shader the default selected is now 2.5 to match Unity default
* Community Node additions
    * The Four Headed Cat
        * Added 'Grayscale' node

v0.2.3 dev 001
* New control points can be added to wires to better manipulate its shape
    * Double click a wire to create an additional control point
    * Control points are selected, moved and deleted similar to regular nodes
* Fixed issue with box selection being active when dragging nodes with the 'Shift' key held down
* Fixed issues with wire resources not being correctly released when ASE is shut down
* Fixed issues with 'Pixel Normal World' and 'Vertex Normal World' nodes
* Fixed issue with 'Multiply' node on Matrix/Vector multiplications
* Fixed issue with 'Break To Components' node
* Fixed issue with 'Component Mask' node
* Fixed issue with wrong type propagation when replacing node connections 
* Fixed issue with instance references being lost on 'Texture Sample' and 'Screen Color' nodes
* Tweaked 'Object to World' and 'World to Object' nodes to be more compile friendly
* Added 'Model' matrix node
* Added 'Relay' node
* Added 'TriplanarObjectSpace' sample to Samples folder
* Added precision selector for variables ( known issue: precision info is not being taken into account when auto local vars are created )
* Community Node additions
    * The Four Headed Cat
        * Added 'Tau' node
    * Rea
        * Added 'Height Map Blend' node

v0.2.2 dev 001
* Fixed issue with 'Mask Clip Value' not being correctly synced between material and shader
* Added colored Debug Mode ... this is an experimental feature where each port and wire are colored according to its data type. Each color/type pair are not final
    * Hold 'P' key to enable debug mode and release it to disable it
    * Double hit 'P' key to toggle  debug mode on. Double hit 'P' key again to disable it.
* Added 'Matrix From Vectors' node
* Fixed issue with 'Vertex Binormal World' node	
* Added 'Shader Model' dropdown on Master Node properties
* Community Node additions
    * The Four Headed Cat
        * Fixed issues with 'Logical Operator' nodes
    
v0.2.1 dev 001
* Fixed multiple issues importing current version on top of v0.1.0 dev 001

v0.2.0 dev 003
* Mask Clip Value when used is registered as a Material Property

v0.2.0 dev 002
* Improved duplicate code detection system
* Slight improvement on save/update times ( important for Live Mode )
* Fixed issue with 'Texture Sample' node incorrectly outputting a float4 when no texture assigned and on Normal mode 
* Fixed issue on not opening the correct shader from a material inspector if a new one is selected from its dropdown
* Fixed issue with 'Length' node incorrectly changing its output type
* Community Node additions
    * The Four Headed Cat
        * Flipbook UV Animation

v0.2.0 dev 001
* Fixed issues with 'Get Local Var' node
    * Output port type is now correctly set to its reference type
    * Changed how references are saved so it won't be affected by order index re-ordering
* Fixed issue with 'Power' node
* Fixed issue with 'ATan2' node
* Fixed issue with 'Cross' node
* Community Node additions
    * The Four Headed Cat
        * Logical If
        * Pixelate
* Community Samples additions
    * The Four Headed Cat 
        * DissolveBurn
    * Mourelas Konstantinos
        * EnvironmentGradient
        
v0.1.5 dev 001
* Community Node additions
    * The Four Headed Cat ( moved to a separate 'Logical Operators' category )
        * Compare With Range
        * Compare Not Equal
        * Compare Lower Equal
        * Compare Greater Equal
        * Compare Lower
        * Compare Greater
    * Kebrus
        * Vertex Tangent World
        * Vertex Binormal World
* 'Register Local Var' node changes:
    * Is now independent from Master Node execution order and generates activation signals
    * Will always be executed even if not connected to Master Node 
    * Fixed issue updating name string array when loading from file		
    * Added order index to control their declaration order( lesser index declared first )
* Fixed issue on port type change not propagating in certain nodes
* Hitting Escape key will disable context palette menu if active
* Fixed issue where right mouse clicking on certain port areas would delete their wire connection
* Minor improvement on nodes performance

v0.1.4 dev 002
* Dynamic type nodes now also reacting to input port disconnections
* Updated TFHCRemap node from benderete

0.1.4 dev 001
* Fixed issue with order index not being correctly read/written
* Redone Refraction Shader according to rea suggestion 
* Register Local Var node now has a title style similar to Property Nodes with the local var name always visible 
* Added Get Local Var Node. It allows the user to use already registered local vars anywhere in the graph
* Added Custom Node Remap ("TFHC - Remap") created by user benderete
* Fixed issue on Texture Sample UV port not correctly casting to float2 when needed
* Fixed issue with Texture Sample node not adapting layout when reference is in normal mode

v0.1.3 dev 003
* Added RegisterLocalVar node. This is a node to improve shader readability in certain situations, as it forces the shader to create a local var containing its input value and always use that as output
* Added Screen Color Texture Reference feature
* Created Simple Refraction example ( Samples/SimpleRefraction ) 
* Fixed issues with sampler instance resizing
* Fixed issue with Fresnel node incident vector
* Fixed issue with attemping connection removal on inexistent nodes ( bug affecting Append node )
* Fixed issue with overwriting render type and queue values with Blend Mode default values on read from file

v0.1.3 dev 002
* Fixed multiple issues with deleting a Texture Sample node being referenced by other nodes
* Tweaked Texture Sample reference UI 

v0.1.3 dev 001
* Fixed issue when releasing mouse drag on menu areas not resetting auto*pan
* Tweaked Shader Instancing UI
* Fixed issue with material inspector crashing when updating a property with ASE window turned off
* Fixed issue with custom UI skins not being correctly initialized under some conditions
* Added Texture Reference feature
* Added 'Simple Blur' example to demonstrate how Texture referencing works
* Added small 'Made with Amplify Shader Editor' info as comment on generated shaders

v0.1.2 dev 003
* Fixed issues with opening materials via inspector with no ASE window initialized  

Release Notes v0.1.2 dev 002
* Added GPU Instancing ( see Samples/SimpleGPUInstancing example )
* Added Screen Color node 
* Fixed issue on version testing
* Tweaked Master Node icon 
* Added additional icon into top-left master node node indicating if gpu instancing is being used or not

Release Notes v0.1.2 dev 001
* Fixed typo on Texture Coordinate node
* Added explicit control on Render Type and Queue. They will be automatically set when a Blend Mode is selected.
* Added Fresnel node
* Fixed Trigonometry typo 
* Improved local var generation on op nodes
* Added FWidth node
* Fixed issue with not immediately updating shader when hitting the Live Shader Mode button

v0.1.1 dev 001
* Community Contribution from kebrus: Added Rotator node, rotates UV Coordinates/ Vector2 nodes 
* Fixed Vector2 Append Node bug
* Fixed Int to Float cast issues
* Added Shader title area on top canvas to forbidden node interaction area
* Adjusted Auto-Pan behavior
* Fixed issue with nodes infinite loop detection
* Tweaked mouse detection inside main canvas
* Fixed Queue Order typo when building shader
* Improved notifications when impossible cast is requested
* Added new VectorFromMatrix which gets a specific row or column from a 3x3 or 4x4 matrix
* Automatically hiding Order Index on Uniform Property Type nodes
* Simpler Searchable Node List also being called by hitting the space bar if focus is on main node canvas